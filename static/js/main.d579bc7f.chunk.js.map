{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","requestMovies","title","a","fetch","response","json","Response","Error","FindMovie","addMovie","useState","tempTitle","setTempTitle","foundMovie","setFoundMovie","error","setError","requestButton","then","movieFromServer","catch","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","setMovies","length","some","existMovie","stateMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d579bc7f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const URL = 'http://www.omdbapi.com/?apikey=';\n\nconst API_KEY = 'f3a7d222';\n\nexport const requestMovies = async (title: string): Promise<Movie> => {\n  const response = await fetch(`${URL}${API_KEY}&t=${title}`);\n  const movie = await response.json();\n\n  if (movie.Response === 'False') {\n    throw new Error('Movie is not exist');\n  }\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { requestMovies } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movieFromServer: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [tempTitle, setTempTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const [error, setError] = useState(false);\n\n  const requestButton = () => {\n    requestMovies(tempTitle)\n      .then(movieFromServer => {\n        if (!movieFromServer) {\n          setError(true);\n        } else {\n          setFoundMovie(movieFromServer);\n          setError(false);\n        }\n      })\n      .catch(() => {\n        setError(true);\n      });\n  };\n\n  const handleOnSubmit = () => {\n    if (!foundMovie) {\n      requestButton();\n    } else {\n      addMovie(foundMovie);\n      setTempTitle('');\n      setFoundMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleOnSubmit();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={tempTitle}\n              onChange={(event) => {\n                setTempTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              className=\"button is-light\"\n              onClick={requestButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"add\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (foundMovie) {\n                  addMovie(foundMovie);\n                }\n\n                setTempTitle('');\n                setFoundMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie && (\n          <MovieCard movie={foundMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  // function adds movie if it doesn`t exist\n  const addMovie = (movie: Movie) => {\n    const movieIsHereYet = movies.some(existMovie => (\n      existMovie.imdbID === movie.imdbID\n    ));\n\n    if (!movieIsHereYet) {\n      setMovies(stateMovies => [...stateMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length > 0 && (\n          <MoviesList movies={movies} />\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}